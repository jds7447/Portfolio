일반적으로 Service에서 비즈니스 로직을 처리해야 한다고 생각 하지만 그렇지 않다
Service는 트랜잭션, 도메인 간 순서 보장 역할을 한다



※ Spring 웹 계층
    Web Layer : controllers, exception handlers, filters, view templates, and so on
                                                                                        DTOs
    Service Layer : application services and infrastructure services
                                                                                        Domain Model : domain services, entities, and value objects
    Repository Layer : repository interfaces and their implementations

※ Spring 웹 계층 역할
    Web Layer
        - 흔히 사용하는 컨트롤러(Controller)와 JSP/Freemarker 등 뷰 템플릿 영역
        - 이외에도 필터(@Filter), 인터셉터, 컨트롤러 어드바이스(@ControllerAdvice) 등 외부 요청과 응답에 대한 전반적인 영역
    Service Layer
        - @Service에 사용되는 서비스 영역
        - 일반적으로 Contorller와 DAO의 중간 영역에서 사용됨
        - @Transactional이 사용되어야 하는 영역
    Repository Layer
        - Database와 같이 데이터 저장소에 접근하는 영역
        - DAO(Data Access Object) 영역으로 이해하면 쉬움
    Dtos
        - DTO(Data transfer Object)는 계층 간에 데이터 교환을 위한 객체를 이야기하며 Dtos는 이들의 영역
        - 예를 들어 뷰 템플릿 엔진에서 사용될 객체나 Repository Layer에서 결과로 넘겨준 객체 등
    Domain Model
        - 도메인이라 불리는 개발 대상을 모든 사람이 동일한 관점에서 이해할 수 있고 공유할 수 있도록 단순화 시킨 것
        - 이를테면 택시 앱이라고 했을 때 배차, 탑승, 요금 등이 모두 도메인이 될 수 있음
        - @Entity가 사용된 영역 역시 도메인 모델이라고 할 수 있음
        - 다만, 무조건 데이터베이스의 테이블과 관계가 있어야만 하는 것은 아님
        - VO처럼 값 객체들도 이 영역에 해당하기 때문

위 5가지 영역에서 비즈니스 처리를 담당해야 하는 곳은 Domain 영역이다
기존에 서비스로 처리하던 방식을 트랜잭션 스크립트라고 한다