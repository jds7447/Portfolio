JPA는 인터페이스로서 자바 표준 명세서이다
인터페이스인 JPA를 사용하기 위해서는 구현체가 필요하며 대표적으로 Hibernate, Eclipse Link 등이 있다
하지만 Spring에서 JPA를 사용할 때는 이 구현체를 직접 다루지 않는다
구현체를 좀 더 쉽게 사용하고자 추상화시킨 Spring Data JPA라는 모듈을 이용한다
그 형식은 다음과 같다
Spring Data JPA --> Hibernate --> JPA

Hibernate를 쓰는 것과 Spring Data JPA를 쓰는 것에는 큰 차이가 없지만 스프링에서 이것의 사용을 권장하는 이유는 크게 2가지다
    - 구현체 교체의 용이성
    - 저장소 교체의 용이성

※ 구현체 교체의 용이성
    Hibernate 외의 다른 구현체로 쉽게 교체하기 위함
    Spring Data JPA 내부에서 구현체 매핑을 지원하므로 쉽게 변경 가능

※ 저장소 교체의 용이성
    관계형 데이터베이스 외에 다른 저장소로 쉽게 교체하기 위함
    예를들어 시스템의 규모가 커져 관계형 데이터베이스로 트래픽 감당이 안될 때 MongoDB 등으로 교체가 필요하다면 Spring Data JPA에서 Spring Data MongoDB로 의존성 교체만 하면 됨
    이는 Spring Data의 하위 프로젝트들은 기본적인 CURD의 인터페이스가 같기 때문이다 (save(), findAll, findOne() 등)